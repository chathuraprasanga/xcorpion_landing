name: Deploy Xcorpion Landing to Droplet

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Xcorpion Landing
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up SSH agent
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}

      # Test SSH connection
      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} "echo 'SSH connection successful!'"

      # Debug PATH and npm availability
      - name: Test PATH and npm availability
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            set -e
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm use node
            echo "Node version: $(node -v)"
            echo "npm version: $(npm -v)"
          EOF

      # Deploy Xcorpion Landing to Droplet
      - name: Deploy Xcorpion Landing to Droplet
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            set -e
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # Load nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # Load nvm bash_completion (optional)
            nvm use node # Ensure the correct Node.js version is active
            cd /var/www/xcorpion-landing
            rm -rf dist
            git pull
            npm install --force
            npm run lint
            npm run build
            sudo systemctl restart nginx.service
          EOF
